/*
C 熙攘市场今何在 ~ Immemorial Marketeers
思路是贪心
问题是计数
最后发现计数做一个类似DP的东西就好了，我是神逼

炸了一把，题意读错
但是很快发现思路是一致的，我们这次先贪心求出每个数的情况
发现也是DP能做，但是后效性？？
那就开摆（
我们发现这东西不影响啊，我们把这样的数放到对应的位置去就好了
什么？你说放到对应的位置是什么牛马阴间玩意儿？
我们又不要方案是吧，这不就对了
解决，乱搞起来xdm

果然！过不去大样例是想少了！
放到对应位置绝对是个好想法，但是！！
如果有多个呢？
它们之间没有关系！！！！！！！！！！
*/
#include<bits/stdc++.h>
using namespace std;
using ll=long long;
const ll N=500010,mod=998244353;
vector<ll>S[N],R[N],W[N];//W是DP数组（红眼）
pair<ll,ll>ord[N];
int main()
{
	freopen("marketeers.in","r",stdin);
	freopen("marketeers.out","w",stdout);
	ll n;
	scanf("%lld",&n);
	for(ll i=1;i<=n;i++)
	{
		ll k;
		scanf("%lld",&k);
		S[i].resize(k,0);
		for(ll j=0;j<k;j++)
		{
			ll t;
			scanf("%lld",&t);
			S[i][j]=t;
		}
		sort(S[i].begin(),S[i].end());
	}
	ll mn=2e9;
	for(ll i=1;i<=n;i++)
	{
		auto x=lower_bound(S[i].begin(),S[i].end(),mn);
		if(x==S[i].begin())ord[i]=make_pair(*x,i);
		else x--,ord[i]=make_pair(*x,i),mn=*x;
	}
	sort(ord+1,ord+n+1);
//	for(ll i=1;i<=n;i++)printf("%lld %lld\n",ord[i].first,ord[i].second);
	for(ll i=1;i<=n;i++)R[i]=S[ord[i].second],W[i].resize(R[i].size(),0);
	for(ll i=0;i<(ll)R[1].size();i++)W[1][i]=1;
	for(ll i=2;i<=n;i++)
	{
		ll ptr[2]={0,0};
		ll sum=0;
		for(;ptr[1]<(ll)R[i].size();ptr[1]++)
		{
			while(R[i-1][ptr[0]]<R[i][ptr[1]]&&ptr[0]<(ll)R[i-1].size())sum=(sum+W[i-1][ptr[0]])%mod,ptr[0]++;
			W[i][ptr[1]]=sum;
//			printf("%lld ",W[i][ptr[1]]);
		}
//		putchar(10);
	}
	ll ans=0;
	for(auto it:W[n])ans=(ans+it)%mod;
	printf("%lld",ans);
	return 0;
}
/*
Examples
4
5
7 11 3 10 1
3
8 6 4
1
15
3
1 5 99
Answer:13
Correct

MD又是大样例错掉，不想玩啦
Corner Cases
#1 递增
6
3
1 2 3
3
4 5 6
7
7 8 10 9 25 46 33
6
79 65 58 72 84 91
8
99 101 144 114 126 153 157 142
14
197 185 175 164 172 186 174 193 160 170 188 191 199 165
Answer:42336
注意到全部都是递增的，意味着没有一个能够满足，自然随便选
Correct

#2 大号
10
64
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 
64
65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 
64
129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 
64
193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 
64
257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 
64
321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 
64
385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 
64
449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 
64
513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 
64
577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 
Answer:682155965
同上一样乱选，但是检查取模
Correct

#3 大号（但是换了个顺序）
10
64
577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 
64
513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 
64
449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 
64
385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 
64
321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 
64
257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 
64
193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 
64
129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 
64
65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 
64
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 
Answer:682155965
现在完全递减，其实也是乱选
Correct

#4 上点强度
5
3
1 7 14
3
5 8 12
3
3 9 15
3
2 10 11
3
4 6 13
Answer:2
这个数据有强度了，每个集合三个数字
注意到最优抉择一定是14->12->9->2->4，对应的满足数量为4->3->2->0->0
此时我们可供更改的数...
发现只有最后一个能动，答案是2
Correct

我想这东西还真的挺不好卡的...

#5 不大不小
2
20
10 17 2 34 18 23 6 15 38 22 40 24 8 14 5 25 16 21 27 20
20
12 1 11 3 4 7 9 31 13 19 26 35 28 29 30 32 33 36 37 39
Answer:175
Correct

问题在于手模几乎不可能冲到大样例的强度，稍微缩减一点强度又不够
我们现在的目标是手模出一组到998244353以上的数据，这貌似不可能做到
*/
